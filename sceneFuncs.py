#!/usr/bin/env python

def roadSeg(fd, tvector3):
      fd.write('\t\t<model id="road_3lane" key="Models/road_segments/road_3lane/road_3lane.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>true</visible>\n')
      fd.write('\t\t\t<collisionShape>meshShape</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(tvector3) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')

def makeRoad(fd, startPoint, endPoint):
      currTVector3 = startPoint
      increment = 20
      for i in range (int(startPoint), int(endPoint), increment):
            roadSeg(fd, currTVector3)
            currTVector3 += increment

def startObjects(fd, place):
      fd.write('\t\t<model id="Exp_BLC_150_StartPosition_Trigger" key="Models/trigger/trigger.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>false</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')
      fd.write('\t\t<model id="BLC_Test_Start_Trigger" key="Models/trigger/trigger.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>false</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place - 100) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')
      fd.write('\t\t<model id="BLC_Test_StartSignBridge" key="Models/sign_bridges/bridge_3lane/bridge_3lane.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>true</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place - 100) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')
      fd.write('\t\t<model id="BLC_Test_StartSignPanel" key="Models/sign_panels/Start/panel_sign.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>true</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place - 100) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')

def endObjects(fd, place):
      fd.write('\t\t<model id="BLC_Test_End_Trigger" key="Models/trigger/trigger.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>false</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')
      fd.write('\t\t<model id="BLC_Test_FinishSignBridge" key="Models/sign_bridges/bridge_3lane/bridge_3lane.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>true</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')
      fd.write('\t\t<model id="BLC_Test_FinishSignPanel" key="Models/sign_panels/Finish/panel_sign.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>true</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + str(place) + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n\n')

def makeBridgeSigns(fd, num, place, sign0, sign1, sign2):
            makeTrigger(fd, num, place+50)
            makeBridge(fd, num, place)
            makeSign(fd, num, place, 0, sign0)
            makeSign(fd, num, place, 1, sign1)
            makeSign(fd, num, place, 2, sign2)
            place = place - 200

def makeTrigger(fd, num, place):
      num = str(num)
      place = str(place)

      fd.write('\t\t<model id="BLC_Test_Block0_Trial' + num + '_Trigger0" key="Models/trigger/trigger.scene" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>false</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + place + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t</model>\n')

def makeBridge(fd, num, place):
      num = str(num)
      place = str(place)

      fd.write('\t\t<model id="BLC_Test_Block0_Trial' + num + '_Container" key="Models/sign_bridges/bridge_3lane/bridge_3lane.scene" ref="">')
      fd.write('\t\t\t<mass>0</mass>')
      fd.write('\t\t\t<visible>true</visible>')
      fd.write('\t\t\t<collisionShape>none</collisionShape>')
      fd.write('\t\t\t<scale>')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">')
      fd.write('\t\t\t\t\t<entry>1.0</entry>')
      fd.write('\t\t\t\t\t<entry>1.0</entry>')
      fd.write('\t\t\t\t\t<entry>1.0</entry>')
      fd.write('\t\t\t\t</vector>')
      fd.write('\t\t\t</scale>')
      fd.write('\t\t\t<rotation quaternion="false">')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">')
      fd.write('\t\t\t\t\t<entry>0.0</entry>')
      fd.write('\t\t\t\t\t<entry>0.0</entry>')
      fd.write('\t\t\t\t\t<entry>0.0</entry>')
      fd.write('\t\t\t\t</vector>')
      fd.write('\t\t\t</rotation>')
      fd.write('\t\t\t<translation>')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">')
      fd.write('\t\t\t\t\t<entry>0.0</entry>')
      fd.write('\t\t\t\t\t<entry>0.0</entry>')
      fd.write('\t\t\t\t\t<entry>' + place + '</entry>')
      fd.write('\t\t\t\t</vector>')
      fd.write('\t\t\t</translation>')
      fd.write('\t\t</model>')

def makeSign(fd, num, place, signNum, kind):
      num = str(num)
      place = str(place)

      if (kind == "wrongLane"):
            sign = 'Models/sign_panels/Brake/panel_sign.scene'
      else: # "correctLane"
            sign = 'Models/sign_panels/LaneChange/panel_sign.scene'

      horizPosList = [-3.7, 0.0, 3.7]
      horizPos = str(horizPosList[signNum])
      fd.write('\t\t<model id="BLC_Test_Block0_Trial' + num + '_ContainerElement' + str(signNum) + '" key="' + sign + '" ref="">\n')
      fd.write('\t\t\t<mass>0</mass>\n')
      fd.write('\t\t\t<visible>false</visible>\n')
      fd.write('\t\t\t<collisionShape>none</collisionShape>\n')
      fd.write('\t\t\t<scale>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>1.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</scale>\n')
      fd.write('\t\t\t<rotation quaternion="false">\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</rotation>\n')
      fd.write('\t\t\t<translation>\n')
      fd.write('\t\t\t\t<vector jtype="java_lang_Float" size="3">\n')
      fd.write('\t\t\t\t\t<entry>' +  horizPos + '</entry>\n')
      fd.write('\t\t\t\t\t<entry>0.0</entry>\n')
      fd.write('\t\t\t\t\t<entry>' + place + '</entry>\n')
      fd.write('\t\t\t\t</vector>\n')
      fd.write('\t\t\t</translation>\n')
      fd.write('\t\t\t<ambientLight>\n')
      fd.write('\t\t\t\t<color>\n')
      fd.write('\t\t\t\t\t<vector jtype="java_lang_Float" size="4">\n')
      fd.write('\t\t\t\t\t\t<entry>1.5</entry>\n')
      fd.write('\t\t\t\t\t\t<entry>1.5</entry>\n')
      fd.write('\t\t\t\t\t\t<entry>1.5</entry>\n')
      fd.write('\t\t\t\t\t\t<entry>1.5</entry>\n')
      fd.write('\t\t\t\t\t</vector>\n')
      fd.write('\t\t\t\t</color>\n')
      fd.write('\t\t\t</ambientLight>\n')
      fd.write('\t\t</model>\n')
